show dbs
use test

db.inventory.insertMany([
  {item: "journal", qty: 25, tags: ["blank", "red"], dim_cm: [14, 21]},
  {item: "notebook", qty: 50, tags: ["red", "blank"], dim_cm: [14, 21]},
  {item: "paper", qty: 100, tags: ["red", "blank", "plain"], dim_cm: [14, 21]},
  {item: "planner", qty: 75, tags: ["blank", "red"], dim_cm: [22.85, 30]},
  {item: "postcard", qty: 45, tags: ["blue"], dim_cm: [10, 15.25]},
  {item: "postcard", qty: 45, tags: ["blue", "red"], dim_cm: [10, 15.25]}
]);

db.inventory.find()

// 순서가 보장되어야 함
db.inventory.find({
  tags: ['red', 'blank']
})
// 순서가 보장되어야 함
db.inventory.find({
  tags: ['blank', 'red']
})

// 전부 포함되어야 함(and)
db.inventory.find({
  tags: {$all: ['red', 'blank']}
})

// 하나라도 포함된 경우(or)
db.inventory.find({
  tags: {$in: ['red', 'blank']}
})

db.inventory.find({
  tags: 'blue'
})

db.inventory.find({
  dim_cm: {$gt: 15}
})

// 데이터기준, 데이터가 조건들 중 하나라도 만족해야 한다. 데이터가 n개 조건 중 하나라도 만족하면 true
db.inventory.find({
  dim_cm: {$gt: 15, $lt: 20} // and
})

// 데이터기준, 데이터가 조건들에 모두 만족하는게 하나라도 있어야 한다. 데이터가 n개 조건 모두를 만족해야 true
db.inventory.find({
  dim_cm: {$elemMatch: {$gt: 15, $lt: 20}} // and
})

db.inventory.find({
  "dim_cm.1": {$lt: 20} // 배열의 첫번째 배열 검사
})

// 사이즈 검사
db.inventory.find({
  tags: {$size: 3}
})

use sample_supplies
db.sales.findOne()
db.sales.find({
  "items.name": "binder",
  "items.quantity": {$lte: 6}
})
db.sales.find({
  items: {
    $elemMatch: {
      name: "binder",
      quantity: {$lte: 6}
    }
  }
})

db.sales.find(
    {
      items: {
        $elemMatch: {
          name: "binder",
          quantity: {$lte: 6}
        }
      }
    },
    // 프로젝션
    {
      saleDate: 1,
      "items.$": 1,
      storeLocation: 1,
      customer: 1
    }
)